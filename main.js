console.log('///////////////////////////////////// 1 //////////////////////////////////////////');
// Работа с concat
// Для решения задач данного блока вам понадобятся следующие методы: concat.
// Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.

const arr1 = [1, 2, 3];
const arr2 = [4, 5, 6];

const concat = arr1.concat(arr2);

console.log(concat);

console.log('///////////////////////////////////// 2 //////////////////////////////////////////');

// Работа с reverse
// Для решения задач данного блока вам понадобятся следующие методы: reverse.
// Дан массив [1, 2, 3]. Сделайте из него массив [3, 2, 1].

const reverse = arr1.reverse();

console.log(reverse);

console.log('///////////////////////////////////// 3 //////////////////////////////////////////');

// Работа с push, unshift
// Для решения задач данного блока вам понадобятся следующие методы: push, unshift.
// Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.

const push = arr1.push(4, 5, 6)

console.log(arr1);
console.log(push); //??????????????????

const unshift = arr1.unshift(4, 5, 6)

console.log(arr1);

console.log('///////////////////////////////////// 4 //////////////////////////////////////////');

// Работа с shift, pop
// Для решения задач данного блока вам понадобятся следующие методы: shift, pop.
// Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.

const arr3 = ['js', 'css', 'jq'];
const arr4 = ['js', 'css', 'jq'];

const shift = arr3.shift(2)

console.log(shift);

const pop = arr4.pop(2)

console.log(pop);

console.log('///////////////////////////////////// 5 //////////////////////////////////////////');

// Работа с slice
// Для решения задач данного блока вам понадобятся следующие методы: slice.
// Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].
// Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].

const arr5 = [1, 2, 3, 4, 5];

const slice = arr5.slice(0, 3)

console.log(slice);

const slice2 = arr5.slice(3, 5)

console.log(slice2);

console.log('///////////////////////////////////// 6 //////////////////////////////////////////');

// Работа с splice
// Для решения задач данного блока вам понадобятся следующие методы: splice.
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].

const splice3 = arr5.splice(1, 2)
console.log(arr5);

const arr6 = [1, 2, 3, 4, 5];

const splice4 = arr6.splice(1, 3)
console.log(splice4);

const arr7 = [1, 2, 3, 4, 5];

const splice5 = arr7.splice(3, 0, 'a', 'b', 'c',)
console.log(arr7);

const arr8 = [1, 2, 3, 4, 5];

arr8.splice(1, 0, 'a', 'b')
arr8.splice(6, 0, 'c')
arr8.splice(8, 0, 'e')
console.log(arr8);

console.log('///////////////////////////////////// 7 //////////////////////////////////////////');

// Работа с sort
// Дан массив [3, 4, 1, 2, 7]. Отсортируйте его по возрастанию. ( Отсортируй с помощью sort)

const arr9 = [3, 4, 1, 2, 7];

const sort = arr9.sort()

console.log(sort);

console.log('///////////////////////////////////// 7 //////////////////////////////////////////');

// Работа с Object.keys
// Дан объект {js:'test', jq: 'hello', css: 'world'}. Получите массив его ключей.


const obj = {
    js: 'test',
    jq: 'hello',
    css: 'world'
};

const arrObj = [];

for (var key in obj) {
    arrObj.push(key)
}
console.log(arrObj);

console.log('///////////////////////////////////// BLOCK 2 //////////////////////////////////////////');
console.log('///////////////////////////////////// 1 //////////////////////////////////////////');

// Блок 2
// Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в
// третий 'xxx' и так далее.

const arr10 = [];
let x = '';

for (let i = 0; i < 10; i++) {
    x += 'x'
    arr10[i] = x;
}

console.log(arr10);

console.log('///////////////////////////////////// 2 //////////////////////////////////////////');

// Заполните массив следующим образом: в первый элемент
// запишите '1', во второй '22', в третий '333' и так далее.

const arr11 = [];
let str = ''
for (let i = 1; i < 10; i++) {
    for (let j = 1; j <= i; j++) {
        str += i;
    }
    arr11.push(str); //?????????????
    str = ''
}

console.log(arr11);

console.log('///////////////////////////////////// 3 //////////////////////////////////////////');

// Сделайте функцию arrayFill, которая будет заполнять массив заданными значениями.
// Первым параметром функция принимает значение, которым заполнять массив, а вторым -
// сколько элементов должно быть в массиве. Пример: arrayFill('x', 5) сделает массив
// ['x', 'x', 'x', 'x', 'x'].

function arrayFill(str, x) {
    const arr = [];
    for (let i = 0; i < x; i++) {
        arr[i] = str
    }
    return arr
}

console.log(arrayFill('x', 5))

console.log('///////////////////////////////////// 4 //////////////////////////////////////////');

// Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить,
// чтобы в сумме получилось больше 10-ти.

const arr12 = [1, 2, 3, 4, 5, 6]
let sum = 0;

for (let i = 0; i < arr12.length; i++) {
    if (sum <= 10) {
        sum += arr12[i]
    } else {
        console.log(i);
    }
}

console.log('///////////////////////////////////// BLOCK 3 //////////////////////////////////////////');
console.log('///////////////////////////////////// 1 //////////////////////////////////////////');

// Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет,
// что оно больше нуля и меньше 10.
// Если это так - пусть функция возвращает true, если не так - false.

function isNumberInRange(x) {
    if (x > 0 && x <= 10) {
        return true
    } else {
        return false
    }
}

console.log(isNumberInRange(11));

console.log('///////////////////////////////////// 2 //////////////////////////////////////////');
// Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и
// меньше 10-ти. Для этого используйте вспомогательную функцию isNumberInRange из предыдущей
// задачи.
const arr13 = [1, 5, 11, 8, 15];
const arr14 = [];

for (let i = 0; i < arr13.length; i++) {
    if (isNumberInRange(arr13[i])) {
        arr14.push(arr13[i])
    }
}

console.log(arr14);

console.log('///////////////////////////////////// 3 //////////////////////////////////////////');
// Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое
// число и возвращает сумму его цифр.


function getDigitsSum(digit) {
    let toStr = String(digit)

    let digitArr = toStr.split('')

    let sum = 0;

    for (let i = 0; i < digitArr.length; i++) {
        sum += Number(digitArr[i])
    }

    return sum
}

console.log(getDigitsSum(2018));

console.log('///////////////////////////////////// 4 //////////////////////////////////////////');
// Найдите все года от 1 до 2018, сумма цифр которых равна 13.
// Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.

let years = [];

for (let i = 1; i < 2019; i++) {
    // console.log(getDigitsSum(i))
    if (getDigitsSum(i) == 13) {
        years.push(i)
    }
}

console.log(years)

console.log('///////////////////////////////////// 5 //////////////////////////////////////////');

// Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число
// и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.

function isEven(x) {
    if (x % 2 == 0) {
        return true
    } else {
        return false
    }
}

console.log(isEven(10))
console.log(isEven(15))
console.log(isEven(120))

console.log('///////////////////////////////////// 6 //////////////////////////////////////////');

// Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только
// четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей
// задачи.

const arr15 = [1, 5, 10, 8, 17, 20]

for (let i = 0; i < arr15.length; i++) {
    if (!(isEven(arr15[i]))) {
        delete arr15[i]
    }
}

let arrN = arr15.filter(function (item) {
    return item !== undefined
})

console.log(arrN)

console.log('///////////////////////////////////// 7 //////////////////////////////////////////');

// Сделайте функцию getDivisors, которая параметром принимает число и возвращает массив его
// делителей (чисел, на которое делится данное число).

const arr16 = []

function getDivisors(x) {
    for (let i = 0; i <= x; i++) {
        if (x % i == 0) {
            arr16.push(i)
        }
    }
    return arr16
}

console.log(getDivisors(10))
